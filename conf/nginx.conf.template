error_log log/error.log info;
pid run/nginx.pid;


http {
  sendfile on;

  upstream websocket_server {
    server localhost:$${websocket};
  }

  upstream fakeoauth_server {
    server localhost:$${fake_oauth};
  }

  # See http://nginx.org/en/docs/http/websocket.html
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  map $status $loggable {
      ~^[23]  0;
      ~^[101] 0;
      default 1;
  }

  log_format elb_log '$proxy_protocol_addr - $remote_user [$time_local] ' '"$request" $status $body_bytes_sent "$http_referer" ' '"$http_user_agent"';

  server {
    listen $${app};
    listen $${app_http_proxy} proxy_protocol; # This is for AWS Elastic Load Balancer
    client_max_body_size 400M;

    location / {
      proxy_pass http://127.0.0.1:$${app_internal};

      proxy_set_header        Host $http_host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;
    }

    location /websocket {
        proxy_pass http://websocket_server/websocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_read_timeout 60s;
    }

    location /fakeoauth2 {
        proxy_pass http://fakeoauth_server/fakeoauth2;
    }

    error_log log/nginx-error.log warn;
    # one of: debug, info, notice, warn, error, crit, alert, emerg

    access_log log/nginx-bad-access.log elb_log if=$loggable;
  }

  # Set an array of temp and cache file options that will otherwise default to
  # restricted locations accessible only to root.
  client_body_temp_path tmp/client_body;
  fastcgi_temp_path tmp/fastcgi_temp;
  proxy_temp_path tmp/proxy_temp;
  scgi_temp_path tmp/scgi_temp;
  uwsgi_temp_path tmp/uwsgi_temp;

}

events {
}
