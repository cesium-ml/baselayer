app:
    secret_key: abc01234  # This secret key can be any random string of
                          # characters.
                          #
                          # You should re-generate this for your application
                          # using:
                          #
                          # base64.b64encode(os.urandom(50)).decode('ascii')
    factory:

database:
    database:
    host: localhost
    port: 5432
    user:
    password:

paths:
    downloads_folder: '/tmp'

server:
    ssl: False
    processes: 1

    # From https://console.developers.google.com/
    #
    # - Create Client ID
    # - Javascript origins: https://localhost:5000
    # - Authorized redirect URLs: http://localhost:5000/complete/google-oauth2/
    #
    # You need to have Google+ API enabled; it takes a few minutes to activate.
    auth:
        debug_login: False
        google_oauth2_key:
        google_oauth2_secret:


services:
    paths:
      - ./baselayer/services
      - ./services

    # By default, all services are enabled.  Use this list to add
    # services if 'disabled' is set to '*'
    enabled:

    # A list of service names, or '*'
    disabled:
      - dask

    # You can use disabled to disable specific services, or '*' to disable them all

ports:
    websocket: 64000
    fake_oauth: 63000
    app: 5000
    app_http_proxy: 5001
    app_internal: 65000  # nginx forwards this port to ports:app
    dask: 63500
    websocket_path_in: 'ipc://run/message_flow_in'
    websocket_path_out: 'ipc://run/message_flow_out'

# You can schedule jobs to run at a certain time interval (given in minutes).
#
# If baselayer is not running at the time the job is supposed to run,
# it will be run when fired up the next time.
#
# If a "limit" is provided, the cron job will only executed between
# the start and end times given.
#
# cron:
#   - interval: 1
#     script: tools/1_minute.py
#   - interval: 5
#     script: tools/5_minute.py
#     limit: ["01:00", "02:00"]
